syntax = "proto3";

package uptown_runners.members.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/UptownRunners/common/members/v1/go/members";

message GetMemberByIdRequest {
    int64 Id = 1;
}

message GetMemberByEmailRequest {
    string Email = 1;
}

message GetMemberByNationalIdentifierRequest {
    string NationalIdentifier = 1;
}

message GetMembersRequest {
    int64 Skip = 1;
    int64 Take = 2;
}

message CreateMemberRequest {
    string NationalIdentifier = 1;
    string Email = 2;
    string FirstName = 3;
    string LastName = 4;
    string PhoneNumber = 5;
    string Address = 6;
    MemberShipType MemberShipType = 7;
    google.protobuf.Timestamp RenewedDate = 8;
    google.protobuf.Timestamp OverrideExpirationDate = 9;
}

message UpdateMemberRequest {
    int64 Id = 1;
    string Email = 2;
    string FirstName = 3;
    string LastName = 4;
    string PhoneNumber = 5;
    string Address = 6;
    MemberShipType MemberShipType = 7;
    google.protobuf.Timestamp RenewedDate = 8;
    google.protobuf.Timestamp OverrideExpirationDate = 9;
}

message DeleteMemberRequest {
    int64 MemberId = 1;
}

enum MemberShipType {
    FULL = 0;
    SUPPORT = 1;
}

enum MembershipStatus {
    Active = 0;
    Inactive = 1;
}

message Member {
    int64 Id = 1;
    string NationalIdentifier = 2;
    string Email = 3;
    string FirstName = 4;
    string LastName = 5;
    string PhoneNumber = 6;
    string Address = 7;
    MemberShipType MemberShipType = 8;
    google.protobuf.Timestamp RenewedDate = 9;
    google.protobuf.Timestamp OverrideExpirationDate = 10;
    MembershipStatus Status = 11;
}

message GetMemberResponse {
    Member Member = 1;
}

message UpdateMemberResponse {
    Member Member = 1;
}

message CreateMemberResponse {
    Member Member = 1;
}

message DeleteMemberResponse {
    Member Member = 1;
}

message GetMembersResponse {
    repeated Member Members = 1;
}

service MembersService {
    rpc GetById(GetMemberByIdRequest) returns (GetMemberResponse);
    rpc GetByEmail(GetMemberByEmailRequest) returns (GetMemberResponse);
    rpc GetByNationalIdentifier(GetMemberByNationalIdentifierRequest) returns (GetMemberResponse);
    rpc List(GetMembersRequest) returns (GetMembersResponse);
    rpc Create(CreateMemberRequest) returns (CreateMemberResponse);
    rpc Update(UpdateMemberRequest) returns (UpdateMemberResponse);
    rpc Delete(DeleteMemberRequest) returns (DeleteMemberResponse);
}
