syntax = "proto3";

package uptown_runners.members.v2;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/UptownRunners/common/members/v2/go/members";

message GetMemberByIdRequest {
  int64 id = 1;
}

message GetMemberByEmailRequest {
  string email = 1;
}

message GetMemberByNationalIdentifierRequest {
  string national_identifier = 1;
}

message GetMembersRequest {
  optional int64 skip = 1;
  optional int64 take = 2;
}

message CreateMemberRequest {
  string national_identifier = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  string phone_number = 5;
  Address address = 6;
  MembershipType membership_type = 7;
  google.protobuf.Timestamp renewed_date = 8;
  google.protobuf.Timestamp override_expiration_date = 9;
}

message UpdateMemberRequest {
  int64 id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  string phone_number = 5;
  Address address = 6;
  MembershipType membership_type = 7;
  google.protobuf.Timestamp renewed_date = 8;
  google.protobuf.Timestamp override_expiration_date = 9;
  bool deactivated = 10;
}

message DeleteMemberRequest {
  int64 member_id = 1;
}

message UpdateStatusesRequest {}

enum MembershipType {
  FULL = 0;
  SUPPORT = 1;
}

enum MembershipStatus {
    ACTIVE = 0;
    INACTIVE = 1;
}

message Member {
    int64 id = 1;
    string national_identifier = 2;
    string email = 3;
    string first_name = 4;
    string last_name = 5;
    string phone_number = 6;
    Address address = 7;
    MembershipType membership_type = 8;
    google.protobuf.Timestamp renewed_date = 9;
    google.protobuf.Timestamp override_expiration_date = 10;
    MembershipStatus status = 11;
    bool deactivated = 12;
}

message Address {
    string street = 1;
    string postal_code = 2;
    string city = 3;
    string country = 4;
}

message GetMemberResponse {
    Member member = 1;
}

message UpdateMemberResponse {
    Member member = 1;
}

message CreateMemberResponse {
    Member member = 1;
}

message DeleteMemberResponse {
    Member member = 1;
}

message GetMembersResponse {
    repeated Member members = 1;
}

message UpdateStatusesResponse {
  bool success = 1;
  string error_message = 2;
}

service MembersService {
    rpc GetById(GetMemberByIdRequest) returns (GetMemberResponse);
    rpc GetByEmail(GetMemberByEmailRequest) returns (GetMemberResponse);
    rpc GetByNationalIdentifier(GetMemberByNationalIdentifierRequest) returns (GetMemberResponse);
    rpc List(GetMembersRequest) returns (GetMembersResponse);
    rpc Create(CreateMemberRequest) returns (CreateMemberResponse);
    rpc Update(UpdateMemberRequest) returns (UpdateMemberResponse);
    rpc Delete(DeleteMemberRequest) returns (DeleteMemberResponse);
    rpc UpdateStatuses(UpdateStatusesRequest) returns (UpdateStatusesResponse);
}
